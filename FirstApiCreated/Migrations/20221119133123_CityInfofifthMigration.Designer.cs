// <auto-generated />
using FirstApiCreated.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstApiCreated.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    [Migration("20221119133123_CityInfofifthMigration")]
    partial class CityInfofifthMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("FirstApiCreated.Entities.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("CityId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            Description = "The City where Bouha came from",
                            Name = "Mahdia"
                        },
                        new
                        {
                            CityId = 2,
                            Description = "The City where Boul3ez came from ",
                            Name = "Tozeur"
                        },
                        new
                        {
                            CityId = 3,
                            Description = "The city where the Animal Harry came from",
                            Name = "Bizete"
                        });
                });

            modelBuilder.Entity("FirstApiCreated.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointsOfInterest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "Blue lagoon beach",
                            Name = "The beach"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Description = "The most Magical sahara in Africa ",
                            Name = "Sahara"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            Description = "wonderful place ",
                            Name = "Ras jabl"
                        });
                });

            modelBuilder.Entity("FirstApiCreated.Entities.PointOfInterest", b =>
                {
                    b.HasOne("FirstApiCreated.Entities.City", "City")
                        .WithMany("PointsofInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("FirstApiCreated.Entities.City", b =>
                {
                    b.Navigation("PointsofInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
